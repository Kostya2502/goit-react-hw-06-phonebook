{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/App.module.css","redux/actions.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","redux/reducers.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","itemsName","itemsNumber","payload","id","uuidv4","name","number","deleteContact","changeFilter","ContactForm","useForm","register","handleSubmit","errors","useState","setName","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","state","contacts","items","reset","handleChange","e","preventDefault","currentTarget","value","onSubmit","map","contact","toLocaleLowerCase","includes","alert","contactsActions","className","style","form","label","type","placeholder","onChange","input","ref","required","warn","pattern","button","ContactList","allContacts","filter","normalizedFilter","filterContactsByName","TransitionGroup","component","CSSTransition","timeout","classNames","item","onClick","ondeleteContact","connect","OnFilterContacts","in","appear","unmountOnExit","length","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","mainReducer","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.360fdf2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2iMe1\",\"button\":\"ContactList_button__2FNUW\",\"enter\":\"ContactList_enter__33Ria\",\"enterActive\":\"ContactList_enterActive__3In4F\",\"exit\":\"ContactList_exit__1_xgR\",\"exitActive\":\"ContactList_exitActive__2az2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__3uBWi\",\"enterActive\":\"Filter_enterActive__1vE2r\",\"exit\":\"Filter_exit__GRUOu\",\"exitActive\":\"Filter_exitActive__3NgGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__DpWep\",\"appearActive\":\"App_appearActive__79qHY\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction('contact/add', (itemsName, itemsNumber) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: itemsName,\r\n        number: itemsNumber,\r\n    }\r\n}));\r\n\r\nexport const deleteContact = createAction('contact/delete');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import style from \"./ContactForm.module.css\";\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../../redux/actions';\r\n\r\nexport default function ContactForm() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const myNamesInItem = useSelector(state => state.contacts.items);\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        const getContacts = myNamesInItem.map(contact =>\r\n            contact.name.toLocaleLowerCase(),\r\n        );\r\n\r\n        const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n        if (isGetContactAlready) {\r\n            reset();\r\n            return alert(`${name} is already in contacts!`);\r\n        }\r\n        dispatch(contactsActions.addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\r\n            <label className={style.label}>\r\n                Name:\r\n          <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"enter name\"\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                    ref={register({ required: true })}\r\n                />\r\n            </label>\r\n\r\n            {errors.name && errors.name.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            <label className={style.label}>\r\n                Number:\r\n          <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    placeholder=\"enter number\"\r\n                    ref={register({\r\n                        required: true,\r\n                        pattern: /^[0-9]+$/gm,\r\n                    })}\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            {errors.number && errors.number.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            {errors.number && errors.number.type === 'pattern' && (\r\n                <p className={style.warn}>There must be numbers</p>\r\n            )}\r\n\r\n            <button type=\"submit\" className={style.button}>\r\n                Add contact\r\n        </button>\r\n        </form>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport style from './ContactList.module.css';\r\nimport './ContactList.css';\r\nimport * as contactsActions from '../../redux/actions';\r\n\r\nconst filterContactsByName = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return allContacts.filter(({ name }) =>\r\n        name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state =>\r\n        filterContactsByName(state.contacts.items, state.contacts.filter),\r\n    );\r\n\r\n    const ondeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(({ id, name, number }) => (\r\n                < CSSTransition key={id} timeout={400} classNames={style} >\r\n                    <li key={id} className={style.item}>\r\n                        <p >\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => ondeleteContact(id)}\r\n                            className={style.button}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup >\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};\r\n","import style from './Filter.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as contactsActions from '../../redux/actions';\r\n\r\nconst Filter = ({ value, OnFilterContacts }) => {\r\n    return (\r\n        <div classNames={style}><label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={OnFilterContacts}\r\n                placeholder='Search contact'\r\n            />\r\n        </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    OnFilterContacts: e =>\r\n        dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from './App.module.css';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst App = ({ value, contacts }) => {\r\n    return (\r\n        <>\r\n            <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                <h1>Phonebook</h1>\r\n            </CSSTransition>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            {(value.length > 0 || contacts.length > 1) && <Filter />}\r\n            <ContactList />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter,\r\n    contacts: state.contacts.items,\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./actions\";\r\n\r\nconst defaultContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' }\r\n];\r\n\r\nconst items = createReducer(defaultContacts, {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n}\r\n);\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport mainReducer from \"./reducers\";\r\nimport {\r\n    persistStore,\r\n    persistReducer\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, mainReducer),\r\n    }\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n\r\n\r\n// =============================================================\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import mainReducer from \"./reducers\";\r\n\r\n// const store = configureStore({ reducer: { contacts: mainReducer } })\r\n\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\n// import store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(<Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n        <App /></PersistGate></Provider>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3IEtN\",\"label\":\"ContactForm_label__iApTQ\",\"input\":\"ContactForm_input__1sL8X\",\"button\":\"ContactForm_button__3nAOu\",\"warn\":\"ContactForm_warn__10uxp\"};"],"sourceRoot":""}